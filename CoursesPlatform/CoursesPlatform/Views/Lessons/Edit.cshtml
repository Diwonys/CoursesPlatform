@using CoursesPlatform.Models.Teacher.Course.Elements
@model CoursesPlatform.Models.Teacher.Course.Lesson

@{
    ViewData["Title"] = "Create";
}

<h1>Edit</h1>

<h4>Lesson</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div>
                <label for="Topic">Topic</label>
                <input type="text" name="Topic" value="@Model.Topic">
            </div>

            @for (var i = 0; i < Model.Content.Count(); i++)
            {
                var item = Model.Content[i];
                <div>
                    <div>
                        <input type="button" value="Remove" onclick="removeElement(this)">
                        <label for="width">width</label>
                        <input type="number" name="width" style="width: 50px;">
                        <label for="height">height</label>
                        <input type="number" name="height" style="width: 50px;">

                        @if (item is Image)
                        {
                            <div>
                                <img src="data:image/jpeg;base64,@item.ToString()" />
                                <input type="text" class="inputElement" name="Elements[@i].ByteImage" value="@item.ToString()"
                            hidden />
                                <input type="file" name="Elements[@i].Image" id="">
                            </div>
                        }
                        else if(item is Paragraph)
                        {
                            <div>
                                <textarea class="inputElement" name="Elements[@i].Text">@item.ToString()</textarea>
                            </div>
                        }
                    </div>
                </div>
            }

            <div id="anchorElement"></div>


            <input type="button" value="add Text"
                onclick='addElementToPage(`<textarea class="inputElement" name="Elements[].Text"></textarea>`)'>

            <input type="button" value="add image"
                onclick='addElementToPage(`<input class="inputElement" type="file" name="Elements[].Image"/>`)'>

            <div>
                <input type="number" name="courseId" value='@ViewData["CourseId"]' hidden>
                <input type="number" name="lessonId" value="@Model.Id" hidden>
            </div>
            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-route-courseId='@ViewData["CourseId"]'>Back to List</a>
</div>


@section Scripts {
@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}

<script src="~/js/elementsController.js" asp-append-version="true"></script>